version: "3.9"

# THE TWO DOCKER COMPOSE MUST OPERATE IN THE SAME NETWORK IN OTHER TO WORK

services:
  # # DATABASES ---------------------------------POSTGRES
  # micropsql:
  #   container_name: micropsql_c
  #   image: postgres:12
  #   restart: unless-stopped
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_DB=reportingservice
  #     - POSTGRES_USER=psqlusername
  #     - POSTGRES_PASSWORD=psqlpassword
  #   volumes:
  #     - micropsql_db_data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # API SERVICE ---------------------------- Authentication Service
  authservice:
    build: ./authservice
    restart: on-failure
    container_name: authservice_c
    ports:
      - '8080:8080'
    environment:
      - DB_USERNAME=psqlusername
      - DB_PASSWORD=psqlpassword
      - DB_NAME=authenticationservice
      - PORT=8080
      - DB_HOST=micropsql
      - NATS_URI=nats://nats:4222
      - JWT_SECRETE=RESTFULAPIs
      - RABBITMQ_URL=amqps://jrzhreof:m6wImZvE2ERmIvEu2wVnOkFB_KBuC6Q3@woodpecker.rmq.cloudamqp.com/jrzhreof
      - DOCKER_RABBITMQ_URL=amqp://admin:pass@rabbitmq:5672

    # depends_on:
    #   - micropsql
    volumes:
      - ./authservice:/app
      - /app/node_modules
    networks:
      - casestudy

 
 # API SERVICE ---------------------------- Bidding Service
  biddingservice:
    build: ./biddingservice
    restart: on-failure
    container_name: biddingservice_c
    ports:
      - '8081:8081'
    environment:
      - DB_USERNAME=psqlusername
      - DB_PASSWORD=psqlpassword
      - DB_NAME=binddingservice
      - PORT=8081
      - DB_HOST=micropsql
      - NATS_URI=nats://nats:4222
      - JWT_SECRETE=RESTFULAPIs
      - RABBITMQ_URL=amqps://jrzhreof:m6wImZvE2ERmIvEu2wVnOkFB_KBuC6Q3@woodpecker.rmq.cloudamqp.com/jrzhreof
      - DOCKER_RABBITMQ_URL=amqp://admin:pass@rabbitmq:5672
    volumes:
      - ./biddingservice:/app
      - /app/node_modules
    networks:
      - casestudy
 
 # API SERVICE ---------------------------- Invoice Service
  invoiceservice:
    build: ./invoiceservice
    restart: on-failure
    container_name: invoiceservice_c
    ports:
      - '8084:8084'
    environment:
      - DB_USERNAME=psqlusername
      - DB_PASSWORD=psqlpassword
      - DB_NAME=invoiceservice
      - PORT=8084
      - DB_HOST=micropsql
      - NATS_URI=nats://nats:4222
      - JWT_SECRETE=RESTFULAPIs
      - RABBITMQ_URL=amqps://jrzhreof:m6wImZvE2ERmIvEu2wVnOkFB_KBuC6Q3@woodpecker.rmq.cloudamqp.com/jrzhreof
      - DOCKER_RABBITMQ_URL=amqp://admin:pass@rabbitmq:5672
    volumes:
      - ./invoiceservice:/app
      - /app/node_modules
    networks:
      - casestudy
 
 # API SERVICE ---------------------------- Notification Service
  notificationservice:
    build: ./notificationservice
    restart: on-failure
    container_name: notificationservice_c
    ports:
      - '8082:8082'
    environment:
      - DB_USERNAME=psqlusername
      - DB_PASSWORD=psqlpassword
      - DB_NAME=notificationservice
      - PORT=8082
      - DB_HOST=micropsql
      - NATS_URI=nats://nats:4222
      - JWT_SECRETE=RESTFULAPIs
      - RABBITMQ_URL=amqps://jrzhreof:m6wImZvE2ERmIvEu2wVnOkFB_KBuC6Q3@woodpecker.rmq.cloudamqp.com/jrzhreof
      - DOCKER_RABBITMQ_URL=amqp://admin:pass@rabbitmq:5672
    volumes:
      - ./notificationservice:/app
      - /app/node_modules
    networks:
      - casestudy
 
 # API SERVICE ---------------------------- Room Service
  roomservice:
    build: ./roomservice
    restart: on-failure
    container_name: roomservice_c
    ports:
      - '8083:8083'
    environment:
      - DB_USERNAME=psqlusername
      - DB_PASSWORD=psqlpassword
      - DB_NAME=roomservice
      - PORT=8083
      - DB_HOST=micropsql
      - NATS_URI=nats://nats:4222
      - JWT_SECRETE=RESTFULAPIs
      - RABBITMQ_URL=amqps://jrzhreof:m6wImZvE2ERmIvEu2wVnOkFB_KBuC6Q3@woodpecker.rmq.cloudamqp.com/jrzhreof
      - DOCKER_RABBITMQ_URL=amqp://admin:pass@rabbitmq:5672
    volumes:
      - ./roomservice:/app
      - /app/node_modules
    networks:
      - casestudy
  
  # WEBSERVER ---------------------------- Bidding Service
  dockernginx:
    build: ./nginx
    container_name: dockernginx_c
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - authservice
      - biddingservice
      - invoiceservice
      - notificationservice
      - roomservice
    volumes:
      - nginx-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
    networks:
      - casestudy

networks:
  casestudy:
    driver: bridge

volumes:
  micropsql_db_data: {}
  nginx-root: {}

