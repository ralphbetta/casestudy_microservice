version: "3.9"

services:
  # DATABASES ---------------------------- Binding
  micropsql:
    container_name: micropsql_c
    image: postgres:12
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=reportingservice
      - POSTGRES_USER=psqlusername
      - POSTGRES_PASSWORD=psqlpassword
    volumes:
      - micropsql_db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  authservice:
    build: ./authservice
    restart: on-failure
    container_name: authservice_c
    ports:
      - '8080:8080'
    environment:
      - DB_USERNAME=psqlusername
      - DB_PASSWORD=psqlpassword
      - DB_NAME=authenticationservice
      - PORT=8080
      - DB_HOST=micropsql
      - JWT_SECRETE=RESTFULAPIs
      - RABBITMQ_URL=amqps://jrzhreof:m6wImZvE2ERmIvEu2wVnOkFB_KBuC6Q3@woodpecker.rmq.cloudamqp.com/jrzhreof
      - DOCKER_RABBITMQ_URL=amqp://admin:pass@rabbitmq:5672

    depends_on:
      - micropsql
      # - rabbitmq
    volumes:
      - ./authservice:/app
      - /Users/betta/Documents/microserv/casestudy/authservice/node_modules

  biddingservice:
    build: ./biddingservice
    restart: on-failure
    container_name: biddingservice_c
    ports:
      - '8081:8081'
    environment:
      - DB_USERNAME=psqlusername
      - DB_PASSWORD=psqlpassword
      - DB_NAME=binddingservice
      - PORT=8081
      - DB_HOST=micropsql
      - JWT_SECRETE=RESTFULAPIs
      - RABBITMQ_URL=amqps://jrzhreof:m6wImZvE2ERmIvEu2wVnOkFB_KBuC6Q3@woodpecker.rmq.cloudamqp.com/jrzhreof
      - DOCKER_RABBITMQ_URL=amqp://admin:pass@rabbitmq:5672

    depends_on:
      # - rabbitmq
      - micropsql
    volumes:
      - ./biddingservice:/app
      - /Users/betta/Documents/microserv/casestudy/biddingservice/node_modules

  invoiceservice:
    build: ./invoiceservice
    restart: on-failure
    container_name: invoiceservice_c
    ports:
      - '8084:8084'
    environment:
      - DB_USERNAME=psqlusername
      - DB_PASSWORD=psqlpassword
      - DB_NAME=invoiceservice
      - PORT=8084
      - DB_HOST=micropsql
      - JWT_SECRETE=RESTFULAPIs
      - RABBITMQ_URL=amqps://jrzhreof:m6wImZvE2ERmIvEu2wVnOkFB_KBuC6Q3@woodpecker.rmq.cloudamqp.com/jrzhreof
      - DOCKER_RABBITMQ_URL=amqp://admin:pass@rabbitmq:5672
    depends_on:
      - micropsql
      # - rabbitmq
    volumes:
      - ./invoiceservice:/app
      - /Users/betta/Documents/microserv/casestudy/invoiceservice/node_modules

  notificationservice:
    build: ./notificationservice
    restart: on-failure
    container_name: notificationservice_c
    ports:
      - '8082:8082'
    environment:
      - DB_USERNAME=psqlusername
      - DB_PASSWORD=psqlpassword
      - DB_NAME=notificationservice
      - PORT=8082
      - DB_HOST=micropsql
      - JWT_SECRETE=RESTFULAPIs
      - RABBITMQ_URL=amqps://jrzhreof:m6wImZvE2ERmIvEu2wVnOkFB_KBuC6Q3@woodpecker.rmq.cloudamqp.com/jrzhreof
      - DOCKER_RABBITMQ_URL=amqp://admin:pass@rabbitmq:5672
    depends_on:
      - micropsql
      # - rabbitmq
    volumes:
      - ./notificationservice:/app
      - /Users/betta/Documents/microserv/casestudy/notificationservice/node_modules

  roomservice:
    build: ./roomservice
    restart: on-failure
    container_name: roomservice_c
    ports:
      - '8083:8083'
    environment:
      - DB_USERNAME=psqlusername
      - DB_PASSWORD=psqlpassword
      - DB_NAME=roomservice
      - PORT=8083
      - DB_HOST=micropsql
      - JWT_SECRETE=RESTFULAPIs
      - RABBITMQ_URL=amqps://jrzhreof:m6wImZvE2ERmIvEu2wVnOkFB_KBuC6Q3@woodpecker.rmq.cloudamqp.com/jrzhreof
      - DOCKER_RABBITMQ_URL=amqp://admin:pass@rabbitmq:5672
    depends_on:
      - micropsql
      # - rabbitmq
    volumes:
      - ./roomservice:/app
      - /Users/betta/Documents/microserv/casestudy/roomservice/node_modules
  
  dockernginx:
    build: ./nginx
    container_name: dockernginx_c
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - authservice
      - biddingservice
      - invoiceservice
      - notificationservice
      - roomservice
    volumes:
      - nginx-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d

networks:
  app-network:
    driver: bridge

volumes:
  micropsql_db_data: {}
  nginx-root: {}

